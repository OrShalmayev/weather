[{"D:\\REACT PRACTICE\\weather\\src\\index.js":"1","D:\\REACT PRACTICE\\weather\\src\\App.js":"2","D:\\REACT PRACTICE\\weather\\src\\serviceWorker.js":"3","D:\\REACT PRACTICE\\weather\\src\\app\\store.js":"4","D:\\REACT PRACTICE\\weather\\src\\features\\counter\\Counter.js":"5","D:\\REACT PRACTICE\\weather\\src\\features\\counter\\counterSlice.js":"6","D:\\REACT PRACTICE\\weather\\src\\features\\search\\searchSlice.js":"7","D:\\REACT PRACTICE\\weather\\src\\features\\search\\Search.js":"8","D:\\REACT PRACTICE\\weather\\src\\app\\api.js":"9","D:\\REACT PRACTICE\\weather\\src\\features\\country\\Country.js":"10","D:\\REACT PRACTICE\\weather\\src\\features\\country\\countrySlice.js":"11"},{"size":644,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1896,"mtime":1611420760875,"results":"14","hashOfConfig":"13"},{"size":5141,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":388,"mtime":1611407820007,"results":"16","hashOfConfig":"13"},{"size":1973,"mtime":1610731896262,"results":"17","hashOfConfig":"13"},{"size":1563,"mtime":1610745662452,"results":"18","hashOfConfig":"13"},{"size":5403,"mtime":1611425639282,"results":"19","hashOfConfig":"13"},{"size":1850,"mtime":1611421848608,"results":"20","hashOfConfig":"13"},{"size":1171,"mtime":1611425276106,"results":"21","hashOfConfig":"13"},{"size":5857,"mtime":1611417186709,"results":"22","hashOfConfig":"13"},{"size":3081,"mtime":1611411583904,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"a0pvy9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\REACT PRACTICE\\weather\\src\\index.js",[],["50","51"],"D:\\REACT PRACTICE\\weather\\src\\App.js",["52","53","54"],"import React from 'react';\r\nimport logo from './logo.svg';\r\n// CSS\r\nimport './App.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n// Components\r\nimport { Counter } from './features/counter/Counter';\r\nimport { Search } from './features/search/Search';\r\nimport { Country } from './features/country/Country';\r\n// Store\r\nimport store from './app/store';\r\nimport Lottie from 'react-lottie';\r\n// header lottie\r\nimport headerData from './assets/lottie/header.json';\r\nimport tree_in_wind_Data from './assets/lottie/tree_in_wind.json';\r\nimport suncloudData from './assets/lottie/suncloud.json';\r\n\r\nconst defaultOptions = (json) => {\r\n  return {\r\n    loop: true,\r\n    autoplay: true, \r\n    animationData: json,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  React.useEffect(()=> {\r\n    console.log('App mounted', store.getState())\r\n  } ,[])\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{ backgroundColor: '#D1F5FF', position:'relative', minHeight: '80vh', height: '80vh' }}>\r\n        <div className=\"sun\" style={{ maxWidth: '30%', position: 'absolute', top: '0', left: '0' }}>\r\n          <Lottie \r\n            options={defaultOptions(suncloudData)}\r\n          />\r\n        </div>\r\n        <h1>Weather App</h1>\r\n        <div className=\"tree\" style={{ maxWidth: '30%', position: 'absolute', right: '10%', bottom: '0', zIndex: '1' }}>\r\n          <Lottie \r\n            options={defaultOptions(tree_in_wind_Data)}\r\n          />\r\n        </div>\r\n        <div class=\"grass\" style={{width:'100vw',position:'absolute',bottom:'0',padding:'3rem',backgroundColor:'green'}}></div>\r\n      </header>\r\n      <main>\r\n        <Search />\r\n        <Country />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\REACT PRACTICE\\weather\\src\\serviceWorker.js",[],"D:\\REACT PRACTICE\\weather\\src\\app\\store.js",[],"D:\\REACT PRACTICE\\weather\\src\\features\\counter\\Counter.js",[],"D:\\REACT PRACTICE\\weather\\src\\features\\counter\\counterSlice.js",[],"D:\\REACT PRACTICE\\weather\\src\\features\\search\\searchSlice.js",[],"D:\\REACT PRACTICE\\weather\\src\\features\\search\\Search.js",["55","56","57"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  autoCompleteAsync,\r\n  selectSearch,\r\n  selectCountryAsync\r\n} from './searchSlice';\r\nimport {\r\n  fetchCountryAsync\r\n} from '../country/countrySlice';\r\nimport styles from './search.module.css';\r\n\r\n// Components\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport function Search() {\r\n  const search = useSelector(selectSearch);\r\n  const dispatch = useDispatch();\r\n\r\n  // Component did mount\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** mounted', search)\r\n  }, []);\r\n\r\n  // Component did update\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** Component did update', search)\r\n  }, [search]);\r\n\r\n  // Component rerendered\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** Component rerendered')\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: 'flex',flexDirection:'column', justifyContent: 'center', alignItems: 'center' }}>\r\n      <p>searched for: {search.value}</p>\r\n      <Autocomplete\r\n        onKeyUp={(event)=>{\r\n          // make ajax to get the country matches the value from this input\r\n          let {value: v} = event.target;\r\n          v = v.replace(/\\s+$/, '');\r\n          if( v.length>=2 ){\r\n            dispatch(autoCompleteAsync(v))\r\n          }\r\n        }}//END onKeyPress\r\n        onChange={(event, values)=>{\r\n          // user chose the city make ajax req to get the city weather\r\n          dispatch(fetchCountryAsync(values));\r\n        }}\r\n        id=\"combo-box-demo\"\r\n        options={search.filteredCountries}\r\n        getOptionLabel={(option) => option.LocalizedName}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label=\"Search for country\" variant=\"outlined\" />}\r\n      />\r\n    </div>\r\n  );\r\n}","D:\\REACT PRACTICE\\weather\\src\\app\\api.js",[],"D:\\REACT PRACTICE\\weather\\src\\features\\country\\Country.js",["58","59","60"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './country.module.css';\r\nimport Lottie from 'react-lottie';\r\nimport cloudyData from '../../assets/lottie/cloudy.json';\r\nimport sunnyData from '../../assets/lottie/sunny.json';\r\nimport mistData from '../../assets/lottie/mist.json';\r\nimport showerData from '../../assets/lottie/shower.json';\r\nimport snow_sunnyData from '../../assets/lottie/snow_sunny.json';\r\nimport stormData from '../../assets/lottie/storm.json';\r\nimport thunderData from '../../assets/lottie/thunder.json';\r\nimport windyData from '../../assets/lottie/windy.json';\r\nimport snowData from '../../assets/lottie/snow.json';\r\n\r\n\r\n// selectors\r\nimport { selectCountryWeather } from '../country/countrySlice';\r\n\r\n// Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    flex: '1',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '&__date': {\r\n      color: 'red',\r\n    },\r\n    '&__icon': {\r\n      color: 'blue,'\r\n    },\r\n    '&__temprature': {\r\n      '&_min': {\r\n        color: 'gray',\r\n        '&::after': {\r\n          content: '\"\\\\2103\"',\r\n        }\r\n      },\r\n      '&_max': {\r\n        color: 'black',\r\n        paddingRight: '1rem',\r\n        '&::after': {\r\n          content: '\"\\\\2103\"',\r\n        }\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nconst icons =  [\r\n  {key: \"1\", title: \"Sunny\", animation: sunnyData},\r\n  {key: \"2\", title: \"Mostly Sunny\", animation: sunnyData},\r\n  {key: \"3\", title: \"Partly Sunny\", animation: cloudyData},\r\n  {key: \"4\", title: \"Intermittent Clouds\", animation: cloudyData},\r\n  {key: \"5\", title: \"Hazy Sunshine\", animation: cloudyData},\r\n  {key: \"6\", title: \"Mostly Cloudy\", animation: cloudyData},\r\n  {key: \"7\", title: \"Cloudy\", animation: cloudyData},\r\n  {key: \"8\", title: \"Dreary (Overcast)\", animation: cloudyData},\r\n  {key: \"11\", title: \"Fog\", animation: windyData},\r\n  {key: \"12\", title: \"Showers\", animation: showerData},\r\n  {key: \"13\", title: \"Mostly Cloudy w/ Showers\", animation: windyData},\r\n  {key: \"14\", title: \"Partly Sunny w/ Showers\", animation: windyData},\r\n  {key: \"15\", title: \"T-Storms\", animation: stormData},\r\n  {key: \"16\", title: \"Mostly Cloudy w/ T-Storms\", animation: stormData},\r\n  {key: \"17\", title: \"Partly Sunny w/ T-Storms\", animation: stormData},\r\n  {key: \"18\", title: \"Rain\", animation: showerData},\r\n  {key: \"19\", title: \"Flurries\", animation: showerData},\r\n  {key: \"20\", title: \"Mostly Cloudy w/ Flurries\", animation: cloudyData},\r\n  {key: \"21\", title: \"Partly Sunny w/ Flurries\", animation: cloudyData},\r\n  {key: \"22\", title: \"Snow\", animation: snow_sunnyData},\r\n  {key: \"23\", title: \"Mostly Cloudy w/ Snow\", animation: snow_sunnyData},\r\n  {key: \"24\", title: \"Ice\", animation: snow_sunnyData},\r\n  {key: \"25\", title: \"Sleet\", animation: stormData},\r\n  {key: \"26\", title: \"Freezing Rain\", animation: stormData},\r\n  {key: \"29\", title: \"Rain and Snow\", animation: snowData},\r\n  {key: \"30\", title: \"Hot\", animation: sunnyData},\r\n  {key: \"31\", title: \"Cold\", animation: thunderData},\r\n  {key: \"32\", title: \"Windy\", animation: thunderData},\r\n  {key: \"33\", title: \"Clear\", animation: sunnyData},\r\n  {key: \"34\", title: \"Mostly Clear\", animation: sunnyData},\r\n  {key: \"35\", title: \"Partly Cloudy\", animation: cloudyData},\r\n  {key: \"36\", title: \"Intermittent Clouds\", animation: cloudyData},\r\n  {key: \"37\", title: \"Hazy Moonlight\", animation: cloudyData},\r\n  {key: \"38\", title: \"Mostly Cloudy\", animation: cloudyData},\r\n  {key: \"39\", title: \"Partly Cloudy w/ Showers\", animation: showerData},\r\n  {key: \"40\", title: \"Mostly Cloudy w/ Showers\", animation: showerData},\r\n  {key: \"41\", title: \"Partly Cloudy w/ T-Storms\", animation: thunderData},\r\n  {key: \"42\", title: \"Mostly Cloudy w/ T-Storms\", animation: thunderData},\r\n  {key: \"43\", title: \"Mostly Cloudy w/ Flurries\", animation: thunderData},\r\n  {key: \"44\", title: \"Mostly Cloudy w/ Snow\", animation: snow_sunnyData},\r\n];\r\n\r\n\r\nconst defaultOptions = (icon)=> {\r\n  return {\r\n    loop: true,\r\n    autoplay: true, \r\n    animationData: icons.find(i=> String(i.key)===String(icon)).animation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  }\r\n};\r\n\r\nexport function Country() {\r\n  const countryWeather = useSelector(selectCountryWeather);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  React.useEffect( ()=> {\r\n    console.log('**Country** did mount', countryWeather)\r\n  }, [countryWeather]);\r\n  // Component rerendered or updated\r\n  React.useEffect( ()=> {\r\n    console.log('**Country** Component rerendered')\r\n  });\r\n\r\n  if (!countryWeather.fiveDay.length) {\r\n    return <h2>Country not selected</h2>\r\n  } else {\r\n    return (\r\n      <div >\r\n        <Grid className={classes.root} container spacing={1}>\r\n          {countryWeather.fiveDay.map( day => {\r\n            return <Paper className={classes.paper}>\r\n              <div className={`${classes.paper}__date`}>{day.Date}</div>\r\n              <div className={`${classes.paper}__icon`}>\r\n              <Lottie options={defaultOptions(day.Day.Icon)}\r\n                height={150}\r\n                width={150}\r\n              />\r\n              </div>\r\n              <div className={`${classes.paper}__temprature`}>\r\n                <span className={`${classes.paper}__temprature_max`}>{day.Temperature.Maximum.Value}</span>\r\n                <span className={`${classes.paper}__temprature_min`}>{day.Temperature.Minimum.Value}</span>\r\n              </div>\r\n            </Paper>\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","D:\\REACT PRACTICE\\weather\\src\\features\\country\\countrySlice.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":9,"column":10,"nodeType":"67","messageId":"68","endLine":9,"endColumn":17},{"ruleId":"65","severity":1,"message":"70","line":16,"column":8,"nodeType":"67","messageId":"68","endLine":16,"endColumn":18},{"ruleId":"65","severity":1,"message":"71","line":6,"column":3,"nodeType":"67","messageId":"68","endLine":6,"endColumn":21},{"ruleId":"65","severity":1,"message":"72","line":11,"column":8,"nodeType":"67","messageId":"68","endLine":11,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":24,"column":6,"nodeType":"75","endLine":24,"endColumn":8,"suggestions":"76"},{"ruleId":"65","severity":1,"message":"72","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"77","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"78","line":117,"column":9,"nodeType":"67","messageId":"68","endLine":117,"endColumn":17},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'headerData' is defined but never used.","'selectCountryAsync' is defined but never used.","'styles' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'mistData' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [search]",{"range":"84","text":"85"},[637,639],"[search]"]