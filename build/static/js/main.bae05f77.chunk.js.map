{"version":3,"sources":["features/search/search.module.css","features/country/country.module.css","logo.svg","features/counter/counterSlice.js","app/api.js","features/search/searchSlice.js","features/country/countrySlice.js","features/search/Search.js","features/country/Country.js","app/store.js","App.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","apiHelpers","keys","process","currentKeyIndex","maxkeys","this","lenngth","nextKey","key","autoComplete","search","getCurrentWeather","locationKey","fiveDayDailyForecast","details","metric","searchSlice","filteredCountries","selectedCountery","cachedCountries","error","loading","updateValue","searchCountryStart","searchCountrySuccess","data","map","c","Key","LocalizedName","filter","find","searchCountryCachedSuccess","searchCountryStartError","selectCountryStart","selectCountrySuccess","selectCountryError","selectSearch","createSelector","cachedCounteries","countrySlice","fiveDay","currentWeather","fetchCountryStart","fetchCountrySuccess","fetchCountryError","selectCountryWeather","country","Search","useSelector","dispatch","useDispatch","React","useEffect","console","log","style","display","flexDirection","justifyContent","alignItems","Autocomplete","onKeyUp","event","text","v","target","replace","length","getState","a","cached","cc","toLowerCase","includes","fetch","then","res","json","catch","err","Promise","reject","onChange","values","Error","weekday","Array","fToCel","valNum","parseFloat","parseInt","DailyForecasts","day","Date","getDay","Temperature","Maximum","Value","Unit","UnitType","Minimum","id","options","getOptionLabel","option","width","renderInput","params","TextField","label","variant","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","secondary","flex","content","paddingRight","icons","title","animation","sunnyData","cloudyData","windyData","showerData","stormData","snow_sunnyData","snowData","thunderData","Country","countryWeather","classes","Grid","className","container","Paper","icon","Day","Icon","loop","autoplay","animationData","i","String","rendererSettings","preserveAspectRatio","height","configureStore","reducer","counter","counterReducer","searchReducer","countryReducer","defaultOptions","App","store","backgroundColor","position","minHeight","maxWidth","top","left","suncloudData","right","bottom","zIndex","tree_in_wind_Data","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"k2/qDACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,MAAQ,sBAAsB,OAAS,uBAAuB,QAAU,wBAAwB,YAAc,mD,oBCA1JD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,qD,ytQCD/I,I,kDCEFC,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAAAC,GAKTA,EAAMH,OAAS,GAEjBI,UAAW,SAAAD,GACTA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,Y,EAK+BX,EAAaY,QAiBzDZ,G,EAjBAM,U,EAAWE,U,EAAWC,kBAiBtBT,EAAf,S,0DCxCaa,EAAa,CACtBC,KAAM,CAACC,mCAAiCA,mCAAiCA,mCAAiCA,oCAC1GC,gBAAiB,EACjBC,QAAS,WACL,OAAOC,KAAKJ,KAAKK,QAAQ,GAE7BC,QAAS,WACDF,KAAKF,gBAAgBE,KAAKD,QAC1BC,KAAKF,gBAAgB,IAEnBE,KAAKF,iBAGfK,IAAK,WACD,OAAOH,KAAKJ,KAAKI,KAAKF,kBAE1BM,aAAc,WAAuB,IAAdC,EAAa,uDAAJ,GAC5B,MAAM,8EAAN,OAAqFL,KAAKG,MAA1F,cAAqGE,EAArG,iBAEJC,kBAAmB,WAA4B,IAAnBC,EAAkB,uDAAJ,GACtC,MAAM,2DAAN,OAAkEA,EAAlE,mBAAwFP,KAAKG,MAA7F,oBAEJK,qBAAsB,WAA8D,IAApDD,EAAmD,uDAArC,GAAIE,EAAiC,wDAAhBC,EAAgB,wDAC/E,MAAM,8DAAN,OAAqEH,EAArE,mBAA2FP,KAAKG,MAAhG,mCAAgIM,EAAhI,mBAAkJC,KCrB7IC,EAAc5B,YAAY,CACrCC,KAAM,SACNC,aAAc,CACZC,MAAO,GACP0B,kBAAmB,GACnBC,iBAAkB,KAClBC,gBAAiB,GACjBC,MAAO,KACPC,SAAS,GAEX7B,SAAU,CACR8B,YAAa,SAAC5B,EAAOG,GACnB,OAAO,2BACFH,GADL,IAEEH,MAAOM,EAAOC,QAAQP,MACtB8B,SAAS,EACTD,MAAO,QAGXG,mBAAoB,SAAC7B,EAAOG,GAC1B,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAO,QAGXI,qBAAsB,SAAC9B,EAAOG,GAC5B,OAAO,2BACFH,GADL,IAEEuB,kBAAkB,YAAKpB,EAAOC,QAAQ2B,KAAKC,KAAI,SAAAC,GAAC,MAAG,CAACC,IAAKD,EAAEC,IAAKC,cAAeF,EAAEE,mBACjFV,gBAAgB,GAAD,mBACVzB,EAAMyB,iBADI,YAEVtB,EAAOC,QAAQ2B,KACfC,KAAI,SAAAC,GAAC,MAAG,CAACC,IAAKD,EAAEC,IAAKC,cAAeF,EAAEE,kBAEpCC,QAAO,SAAAH,GAAC,OAAKjC,EAAMyB,gBAAgBY,MAAK,YAAsB,IAApBF,EAAmB,EAAnBA,cACzC,OAAOF,EAAEE,gBAAkBA,UAGnCR,SAAS,EACTD,MAAO,QAGXY,2BAA4B,SAACtC,EAAOG,GAClC,OAAO,2BACFH,GADL,IAEEuB,kBAAkB,YAAKpB,EAAOC,QAAQ2B,KAAKC,KAAI,SAAAC,GAAC,MAAG,CAACC,IAAKD,EAAEC,IAAKC,cAAeF,EAAEE,mBACjFR,SAAS,EACTD,MAAO,QAGXa,wBAAyB,SAACvC,EAAOG,GAC/B,OAAO,2BACFH,GADL,IAEE0B,MAAOvB,EAAOC,QAAQP,MACtB8B,SAAS,KAGba,mBAAoB,SAACxC,EAAOG,GAC1B,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAO,QAGXe,qBAAsB,SAACzC,EAAOG,GAC5B,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAO,QAGXgB,mBAAoB,SAAC1C,EAAOG,GAC1B,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAOvB,EAAOC,QAAQP,Y,EAiB1ByB,EAAYjB,QAVduB,E,EAAAA,YAEAC,E,EAAAA,mBACAC,E,EAAAA,qBACAS,E,EAAAA,wBACAD,E,EAAAA,2BA8DWK,G,EA5DXH,mB,EACAC,qB,EACAC,mBA0D0BE,aAC1B,SAAA5C,GAAK,OAAIA,EAAMgB,OAAOnB,SACtB,SAAAG,GAAK,OAAIA,EAAMgB,OAAOO,qBACtB,SAAAvB,GAAK,OAAIA,EAAMgB,OAAO6B,oBACtB,SAAChD,EAAO0B,EAAmBsB,GACzB,MAAO,CACLhD,QACA0B,oBACAsB,wBAMSvB,IAAf,QCpKawB,EAAepD,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZmD,QAAS,GACTC,eAAgB,GAChBrB,SAAS,EACTD,MAAO,MAET5B,SAAU,CACRmD,kBAAmB,SAACjD,EAAOG,GACzB,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAO,QAGXwB,oBAAqB,SAAClD,EAAOG,GAC3B,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAO,KACPqB,QAAQ,YACH5C,EAAOC,QAAQ2B,SAIxBoB,kBAAmB,SAACnD,EAAOG,GACzB,OAAO,2BACFH,GADL,IAEE2B,SAAS,EACTD,MAAOvB,EAAOC,QAAQP,Y,EAU1BiD,EAAazC,QAHf4C,E,EAAAA,kBACAC,E,EAAAA,oBACAC,E,EAAAA,kBA8CWC,EAAuBR,aAClC,SAAA5C,GAAK,OAAIA,EAAMqD,QAAQN,WACvB,SAAA/C,GAAK,OAAIA,EAAMqD,QAAQL,kBACvB,SAAAhD,GAAK,OAAIA,EAAMqD,QAAQ1B,WACvB,SAAA3B,GAAK,OAAIA,EAAMqD,QAAQ3B,SACvB,SAACqB,EAASC,EAAgBrB,EAASD,GACjC,MAAO,CACLqB,cAKSD,IAAf,Q,2BCpFO,SAASQ,IACd,IAAMtC,EAASuC,YAAYZ,GACrBa,EAAWC,cAiBjB,OAdAC,IAAMC,WAAW,WACfC,QAAQC,IAAI,qBAAsB7C,KACjC,IAGH0C,IAAMC,WAAW,WACfC,QAAQC,IAAI,kCAAmC7C,KAC9C,CAACA,IAGJ0C,IAAMC,WAAW,WACfC,QAAQC,IAAI,sCAIZ,sBAAKC,MAAO,CAAEC,QAAS,OAAOC,cAAc,SAAUC,eAAgB,SAAUC,WAAY,UAA5F,UACE,+CAAkBlD,EAAOnB,SACzB,cAACsE,EAAA,EAAD,CACEC,QAAS,SAACC,GAAQ,IF+DOC,EE7DXC,EAAKF,EAAMG,OAAlB3E,OACL0E,EAAIA,EAAEE,QAAQ,OAAQ,KAChBC,QAAQ,GACZlB,GF0DqBc,EE1DMC,EF0DF,uCAAI,WAAOf,EAAUmB,GAAjB,iBAAAC,EAAA,yDACpB,kBAATN,EAD6B,uBAErCd,EAASjB,EAAwB,CAAC1C,MAAO,yBAFJ,+BAI5ByE,EAAKG,QAAQ,OAAQ,IAAIC,OAAS,GAJN,gBAKrClB,EAASjB,EAAwB,CAAC1C,MAAO,6CALJ,4BAM5ByE,EAAKG,QAAQ,OAAQ,IAAIC,QAAU,GANP,oBAOrClB,EAAS5B,EAAY,CAAC/B,MAAOyE,KAC7Bd,EAAS3B,OAELgD,EAASF,IAAW3D,OAAOS,gBAAgBW,QAAO,SAAA0C,GAAE,OAAIA,EAAG3C,cAAc4C,cAAcC,SAASV,OACzFI,OAX0B,iBAYnClB,EAASlB,EAA2B,CAACP,KAAM8C,KAZR,mDAgBbI,MAAM3E,EAAWS,aAAauD,IAC/CY,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdC,OAAM,SAAAC,GAAG,OAAE/C,EAAwB,CAAC1C,MAAMyF,OAlBZ,QAgB7BlF,EAhB6B,OAmB/BoD,EAAS1B,EAAqB,CAACC,KAAM3B,KAnBN,mDAqBjCE,EAAWO,UACX0E,QAAQC,OAAOjD,EAAwB,CAAC1C,MAAM,EAAD,MAtBZ,2DAAJ,2DEvD7B4F,SAAU,SAACpB,EAAOqB,GDEO,IAAArC,ECAvBG,GDAuBH,ECAIqC,EDAG,uCAAI,WAAOlC,EAAUmB,GAAjB,mBAAAC,EAAA,6DAE1CpB,EAASP,KAFiC,kBAKlBgC,MAAM3E,EAAWa,qBAAqBkC,EAAQnB,MAAMgD,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UAAQC,OAAM,SAAAC,GAAG,OAAEC,QAAQC,OAAO,IAAIG,MAAML,OAL5F,OAKlClF,EALkC,OAMxCwD,QAAQC,IAAI,oBAAqBzD,IAC7BwF,EAAU,IAAIC,MAAM,IAChB,GAAG,SACXD,EAAQ,GAAG,SACXA,EAAQ,GAAG,UACXA,EAAQ,GAAG,YACXA,EAAQ,GAAG,WACXA,EAAQ,GAAG,SACXA,EAAQ,GAAG,WACLE,EAAS,SAACC,GAGd,OADAA,IADAA,EAASC,WAAWD,IACF,IAAM,IACjBE,SAASF,IAElBvC,EAASN,EAAoB,CAACnB,KAAM3B,EAAQ8F,eAAelE,KAAI,SAAAmE,GAC7D,OAAO,2BACFA,GADL,IAEEC,KAAMR,EAAQ,IAAIQ,KAAKD,EAAIC,MAAMC,UACjCC,YAAa,CACXC,QAAS,CAACC,MAAOV,EAAOK,EAAIG,YAAYC,QAAQC,OAAQC,KAAM,IAAKC,SAAU,IAC7EC,QAAS,CAACH,MAAOV,EAAOK,EAAIG,YAAYK,QAAQH,OAAQC,KAAM,IAAKC,SAAU,aA1B3C,kDA+BxClD,EAASL,EAAkB,CAACtD,MAAM,EAAD,MA/BO,0DAAJ,2DCEhC+G,GAAG,iBACHC,QAAS7F,EAAOO,kBAChBuF,eAAgB,SAACC,GAAD,OAAYA,EAAO5E,eACnC2B,MAAO,CAAEkD,MAAO,KAChBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBE,MAAM,qBAAqBC,QAAQ,oB,iICjCrFC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ1D,QAAS,OACT2D,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQ1D,KAAK2D,UAC1BC,KAAM,IACNnE,QAAS,OACTC,cAAe,SACfE,WAAY,SACZ,UAAW,CACT6D,MAAO,OAET,UAAW,CACTA,MAAO,SAET,gBAAiB,CACf,QAAS,CACPA,MAAO,OACP,WAAY,CACVI,QAAS,aAGb,QAAS,CACPJ,MAAO,QACPK,aAAc,OACd,WAAY,CACVD,QAAS,mBAObE,EAAS,CACb,CAACvH,IAAK,IAAKwH,MAAO,QAASC,UAAWC,GACtC,CAAC1H,IAAK,IAAKwH,MAAO,eAAgBC,UAAWC,GAC7C,CAAC1H,IAAK,IAAKwH,MAAO,eAAgBC,UAAWE,GAC7C,CAAC3H,IAAK,IAAKwH,MAAO,sBAAuBC,UAAWE,GACpD,CAAC3H,IAAK,IAAKwH,MAAO,gBAAiBC,UAAWE,GAC9C,CAAC3H,IAAK,IAAKwH,MAAO,gBAAiBC,UAAWE,GAC9C,CAAC3H,IAAK,IAAKwH,MAAO,SAAUC,UAAWE,GACvC,CAAC3H,IAAK,IAAKwH,MAAO,oBAAqBC,UAAWE,GAClD,CAAC3H,IAAK,KAAMwH,MAAO,MAAOC,UAAWG,GACrC,CAAC5H,IAAK,KAAMwH,MAAO,UAAWC,UAAWI,GACzC,CAAC7H,IAAK,KAAMwH,MAAO,2BAA4BC,UAAWG,GAC1D,CAAC5H,IAAK,KAAMwH,MAAO,0BAA2BC,UAAWG,GACzD,CAAC5H,IAAK,KAAMwH,MAAO,WAAYC,UAAWK,GAC1C,CAAC9H,IAAK,KAAMwH,MAAO,4BAA6BC,UAAWK,GAC3D,CAAC9H,IAAK,KAAMwH,MAAO,2BAA4BC,UAAWK,GAC1D,CAAC9H,IAAK,KAAMwH,MAAO,OAAQC,UAAWI,GACtC,CAAC7H,IAAK,KAAMwH,MAAO,WAAYC,UAAWI,GAC1C,CAAC7H,IAAK,KAAMwH,MAAO,4BAA6BC,UAAWE,GAC3D,CAAC3H,IAAK,KAAMwH,MAAO,2BAA4BC,UAAWE,GAC1D,CAAC3H,IAAK,KAAMwH,MAAO,OAAQC,UAAWM,GACtC,CAAC/H,IAAK,KAAMwH,MAAO,wBAAyBC,UAAWM,GACvD,CAAC/H,IAAK,KAAMwH,MAAO,MAAOC,UAAWM,GACrC,CAAC/H,IAAK,KAAMwH,MAAO,QAASC,UAAWK,GACvC,CAAC9H,IAAK,KAAMwH,MAAO,gBAAiBC,UAAWK,GAC/C,CAAC9H,IAAK,KAAMwH,MAAO,gBAAiBC,UAAWO,GAC/C,CAAChI,IAAK,KAAMwH,MAAO,MAAOC,UAAWC,GACrC,CAAC1H,IAAK,KAAMwH,MAAO,OAAQC,UAAWQ,GACtC,CAACjI,IAAK,KAAMwH,MAAO,QAASC,UAAWQ,GACvC,CAACjI,IAAK,KAAMwH,MAAO,QAASC,UAAWC,GACvC,CAAC1H,IAAK,KAAMwH,MAAO,eAAgBC,UAAWC,GAC9C,CAAC1H,IAAK,KAAMwH,MAAO,gBAAiBC,UAAWE,GAC/C,CAAC3H,IAAK,KAAMwH,MAAO,sBAAuBC,UAAWE,GACrD,CAAC3H,IAAK,KAAMwH,MAAO,iBAAkBC,UAAWE,GAChD,CAAC3H,IAAK,KAAMwH,MAAO,gBAAiBC,UAAWE,GAC/C,CAAC3H,IAAK,KAAMwH,MAAO,2BAA4BC,UAAWI,GAC1D,CAAC7H,IAAK,KAAMwH,MAAO,2BAA4BC,UAAWI,GAC1D,CAAC7H,IAAK,KAAMwH,MAAO,4BAA6BC,UAAWQ,GAC3D,CAACjI,IAAK,KAAMwH,MAAO,4BAA6BC,UAAWQ,GAC3D,CAACjI,IAAK,KAAMwH,MAAO,4BAA6BC,UAAWQ,GAC3D,CAACjI,IAAK,KAAMwH,MAAO,wBAAyBC,UAAWM,IAelD,SAASG,KACd,IAAMC,EAAiB1F,YAAYH,GAE7B8F,GADWzF,cACD6D,KAUhB,OARA5D,IAAMC,WAAW,WACfC,QAAQC,IAAI,wBAAyBoF,KACpC,CAACA,IAEJvF,IAAMC,WAAW,WACfC,QAAQC,IAAI,uCAGToF,EAAelG,QAAQ2B,OAIxB,8BACE,cAACyE,EAAA,EAAD,CAAMC,UAAWF,EAAQzB,KAAM4B,WAAS,EAACxB,QAAS,EAAlD,SACGoB,EAAelG,QAAQf,KAAK,SAAAmE,GAC3B,OAAO,eAACmD,EAAA,EAAD,CAAOF,UAAWF,EAAQvB,MAA1B,UACL,qBAAKyB,UAAS,UAAKF,EAAQvB,MAAb,UAAd,SAA2CxB,EAAIC,OAC/C,qBAAKgD,UAAS,UAAKF,EAAQvB,MAAb,UAAd,SACA,cAAC,IAAD,CAAQd,SAlCE0C,EAkCsBpD,EAAIqD,IAAIC,KAjC7C,CACLC,MAAM,EACNC,UAAU,EACVC,cAAevB,EAAMhG,MAAK,SAAAwH,GAAC,OAAGC,OAAOD,EAAE/I,OAAOgJ,OAAOP,MAAOhB,UAC5DwB,iBAAkB,CAChBC,oBAAqB,oBA6BXC,OAAQ,IACRjD,MAAO,QAGT,sBAAKoC,UAAS,UAAKF,EAAQvB,MAAb,gBAAd,UACE,sBAAMyB,UAAS,UAAKF,EAAQvB,MAAb,oBAAf,SAAsDxB,EAAIG,YAAYC,QAAQC,QAC9E,sBAAM4C,UAAS,UAAKF,EAAQvB,MAAb,oBAAf,SAAsDxB,EAAIG,YAAYK,QAAQH,cAzCvE,IAAC+C,SAyBb,sDC3HIW,mBAAe,CAC5BC,QAAS,CACPC,QAASC,EACTrJ,OAAQsJ,EACRjH,QAASkH,K,6BCUPC,GAAiB,SAACpF,GACtB,MAAO,CACLsE,MAAM,EACNC,UAAU,EACVC,cAAexE,EACf2E,iBAAkB,CAChBC,oBAAqB,oBAiCZS,OA5Bf,WAIE,OAHA/G,IAAMC,WAAU,WACdC,QAAQC,IAAI,cAAe6G,GAAM/F,cAChC,IAED,sBAAKyE,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAatF,MAAO,CAAE6G,gBAAiB,UAAWC,SAAS,WAAYC,UAAW,OAAQZ,OAAQ,QAApH,UACE,qBAAKb,UAAU,MAAMtF,MAAO,CAAEgH,SAAU,MAAOF,SAAU,WAAYG,IAAK,IAAKC,KAAM,KAArF,SACE,cAAC,IAAD,CACEnE,QAAS2D,GAAeS,QAG5B,6CACA,qBAAK7B,UAAU,OAAOtF,MAAO,CAAEgH,SAAU,MAAOF,SAAU,WAAYM,MAAO,MAAOC,OAAQ,IAAKC,OAAQ,KAAzG,SACE,cAAC,IAAD,CACEvE,QAAS2D,GAAea,QAG5B,qBAAKC,MAAM,QAAQxH,MAAO,CAACkD,MAAM,QAAQ4D,SAAS,WAAWO,OAAO,IAAIvD,QAAQ,OAAO+C,gBAAgB,cAEzG,iCACE,cAACrH,EAAD,IACA,cAAC0F,GAAD,WCxCYuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpB,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJqB,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjH,MAAK,SAAAkH,GACjCA,EAAaC,iB,mBEpInB9M,EAAOC,QAAU,CAAC,IAAM,qBAAqB,MAAQ,uBAAuB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,qD","file":"static/js/main.bae05f77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"search_row__z_hWo\",\"value\":\"search_value__2Lsd0\",\"button\":\"search_button__IchAu\",\"textbox\":\"search_textbox__1OoYV\",\"asyncButton\":\"search_asyncButton__1WtbX search_button__IchAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"country_row__2q-lu\",\"value\":\"country_value__j2CX3\",\"button\":\"country_button__2c-OV\",\"textbox\":\"country_textbox__NyDbK\",\"asyncButton\":\"country_asyncButton__370r3 country_button__2c-OV\"};","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => (dispatch, getState) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","\r\nexport const apiHelpers = {\r\n    keys: [process.env.REACT_APP_API_KEY_1, process.env.REACT_APP_API_KEY_2, process.env.REACT_APP_API_KEY_3, process.env.REACT_APP_API_KEY_4],\r\n    currentKeyIndex: 0,\r\n    maxkeys: function(){\r\n        return this.keys.lenngth-1;\r\n    },\r\n    nextKey: function(){\r\n        if (this.currentKeyIndex>this.maxkeys) {\r\n            this.currentKeyIndex=0;\r\n        } else {\r\n            ++this.currentKeyIndex;\r\n        }\r\n    },\r\n    key: function(){\r\n        return this.keys[this.currentKeyIndex];\r\n    },\r\n    autoComplete: function(search = '') {\r\n        return `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${this.key()}&q=${search}&language=en`;\r\n    },\r\n    getCurrentWeather: function(locationKey = '') {\r\n        return `http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${this.key()}&language=en-US`;\r\n    },\r\n    fiveDayDailyForecast: function (locationKey = '', details = false, metric = false) {\r\n        return `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${this.key()}&language=en-US&details=${details}&metric=${metric}`;\r\n    }\r\n}","import { createSelector, createSlice } from '@reduxjs/toolkit';\r\nimport { apiHelpers } from '../../app/api'\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {\r\n    value: '',\r\n    filteredCountries: [],\r\n    selectedCountery: null,\r\n    cachedCountries: [],\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  reducers: {\r\n    updateValue: (state, action) => {\r\n      return {\r\n        ...state,\r\n        value: action.payload.value,\r\n        loading: false,\r\n        error: null\r\n      }\r\n    },\r\n    searchCountryStart: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    },\r\n    searchCountrySuccess: (state, action) => {\r\n      return {\r\n        ...state,\r\n        filteredCountries: [...action.payload.data.map(c=>({Key: c.Key, LocalizedName: c.LocalizedName}))],\r\n        cachedCountries: [\r\n          ...state.cachedCountries,\r\n          ...action.payload.data\r\n            .map(c=>({Key: c.Key, LocalizedName: c.LocalizedName}))\r\n              // only if we dont find the ame localized name then added it to the cached \r\n              .filter(c => !state.cachedCountries.find(({LocalizedName}) => {\r\n                return c.LocalizedName === LocalizedName\r\n              }))\r\n        ],\r\n        loading: false,\r\n        error: null\r\n      }\r\n    },\r\n    searchCountryCachedSuccess: (state, action) => {\r\n      return {\r\n        ...state,\r\n        filteredCountries: [...action.payload.data.map(c=>({Key: c.Key, LocalizedName: c.LocalizedName}))],\r\n        loading: false,\r\n        error: null\r\n      }\r\n    },\r\n    searchCountryStartError: (state, action) => {\r\n      return {\r\n        ...state,\r\n        error: action.payload.value,\r\n        loading: false,\r\n      }\r\n    },\r\n    selectCountryStart: (state, action) => {\r\n      return {\r\n        ...state, \r\n        loading: true,\r\n        error: null\r\n      }\r\n    },\r\n    selectCountrySuccess: (state, action) => {\r\n      return {\r\n        ...state, \r\n        loading: false,\r\n        error: null\r\n      }\r\n    },\r\n    selectCountryError: (state, action) => {\r\n      return {\r\n        ...state, \r\n        loading: false,\r\n        error: action.payload.value\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { \r\n  updateValue,\r\n  // search\r\n  searchCountryStart, \r\n  searchCountrySuccess, \r\n  searchCountryStartError,\r\n  searchCountryCachedSuccess,\r\n  // select\r\n  selectCountryStart,\r\n  selectCountrySuccess,\r\n  selectCountryError\r\n} = searchSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const autoCompleteAsync = text => async (dispatch, getState) => {\r\n  if(typeof text !== 'string') {\r\n    dispatch(searchCountryStartError({value: 'text must be string'}))\r\n    return;\r\n  } else if (text.replace(/\\s+$/, '').length < 2) {\r\n    dispatch(searchCountryStartError({value: 'country must contain at least 2 letters'}))\r\n  } else if (text.replace(/\\s+$/, '').length >= 2) {\r\n    dispatch(updateValue({value: text}))\r\n    dispatch(searchCountryStart())\r\n    // before making ajax req check if the text already exists in the cached state\r\n    let cached = getState().search.cachedCountries.filter(cc => cc.LocalizedName.toLowerCase().includes(text));\r\n    if (cached.length) {\r\n      dispatch(searchCountryCachedSuccess({data: cached}))\r\n    } else {\r\n      // make ajax request to the API\r\n      try {\r\n        let payload = await fetch(apiHelpers.autoComplete(text))\r\n          .then(res=>res.json())\r\n          .catch(err=>searchCountryStartError({value:err}))\r\n          dispatch(searchCountrySuccess({data: payload}))\r\n      } catch (error) {\r\n        apiHelpers.nextKey();\r\n        Promise.reject(searchCountryStartError({value:error}));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const selectCountryAsync = country => async (dispatch, getState) => {\r\n  if(typeof country !== 'string') {\r\n    dispatch(selectCountryError({value: 'text must be string'}))\r\n    return;\r\n  } else if (country.replace(/\\s+$/, '').length < 2){\r\n    // text must be greater then 2 characters to make the ajax request\r\n    dispatch(selectCountryError({value: 'country must contain at least 2 letters'}))\r\n  } else {\r\n    dispatch(selectCountryStart());\r\n    try {\r\n      let payload = await fetch(apiHelpers.getCurrentWeather(country))\r\n        .then(res=>res.json())\r\n        .catch(err=> dispatch(selectCountryError({value:err})))\r\n        dispatch(selectCountrySuccess({data: payload}))\r\n    } catch (error) {\r\n      Promise.reject(dispatch(selectCountryError({value:error})));\r\n    }\r\n  }\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectSearch = createSelector(\r\n  state => state.search.value,\r\n  state => state.search.filteredCountries,\r\n  state => state.search.cachedCounteries,\r\n  (value, filteredCountries, cachedCounteries) => {\r\n    return {\r\n      value,\r\n      filteredCountries,\r\n      cachedCounteries\r\n    }\r\n  }\r\n\r\n)\r\n\r\nexport default searchSlice.reducer;\r\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\r\nimport { apiHelpers } from '../../app/api'\r\n\r\nexport const countrySlice = createSlice({\r\n  name: 'country',\r\n  initialState: {\r\n    fiveDay: [],\r\n    currentWeather: [],\r\n    loading: false,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    fetchCountryStart: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      }\r\n    },\r\n    fetchCountrySuccess: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        fiveDay: [\r\n          ...action.payload.data\r\n        ],\r\n      }\r\n    },\r\n    fetchCountryError: (state, action) => {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.value\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { \r\n  fetchCountryStart,\r\n  fetchCountrySuccess,\r\n  fetchCountryError,\r\n} = countrySlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const fetchCountryAsync = country => async (dispatch, getState) => {\r\n  // dispatch starting fetch country\r\n  dispatch(fetchCountryStart());\r\n  try {\r\n    // get the chosen country from the search input\r\n    const payload = await fetch(apiHelpers.fiveDayDailyForecast(country.Key)).then(res=>res.json()).catch(err=>Promise.reject(new Error(err)));\r\n    console.log('fetchCountryAsync', payload)\r\n    let weekday = new Array(7);\r\n    weekday[0]=\"Sunday\";\r\n    weekday[1]=\"Monday\";\r\n    weekday[2]=\"Tuesday\";\r\n    weekday[3]=\"Wednesday\";\r\n    weekday[4]=\"Thursday\";\r\n    weekday[5]=\"Friday\";\r\n    weekday[6]=\"Saturday\";\r\n    const fToCel = (valNum) => {\r\n      valNum = parseFloat(valNum);\r\n      valNum =  (valNum-32) / 1.8;\r\n      return parseInt(valNum);\r\n    }\r\n    dispatch(fetchCountrySuccess({data: payload.DailyForecasts.map(day => {\r\n      return {\r\n        ...day,\r\n        Date: weekday[new Date(day.Date).getDay()],\r\n        Temperature: {\r\n          Maximum: {Value: fToCel(day.Temperature.Maximum.Value), Unit: \"C\", UnitType: 18},\r\n          Minimum: {Value: fToCel(day.Temperature.Minimum.Value), Unit: \"C\", UnitType: 18}\r\n        }\r\n      }\r\n    })}))\r\n  } catch (error) {\r\n    dispatch(fetchCountryError({value: error}));\r\n  }\r\n}\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCountryWeather = createSelector(\r\n  state => state.country.fiveDay,\r\n  state => state.country.currentWeather,\r\n  state => state.country.loading,\r\n  state => state.country.error,\r\n  (fiveDay, currentWeather, loading, error) => {\r\n    return {\r\n      fiveDay\r\n    }\r\n  }\r\n)\r\n\r\nexport default countrySlice.reducer;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  autoCompleteAsync,\r\n  selectSearch,\r\n  selectCountryAsync\r\n} from './searchSlice';\r\nimport {\r\n  fetchCountryAsync\r\n} from '../country/countrySlice';\r\nimport styles from './search.module.css';\r\n\r\n// Components\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport function Search() {\r\n  const search = useSelector(selectSearch);\r\n  const dispatch = useDispatch();\r\n\r\n  // Component did mount\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** mounted', search)\r\n  }, []);\r\n\r\n  // Component did update\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** Component did update', search)\r\n  }, [search]);\r\n\r\n  // Component rerendered\r\n  React.useEffect( ()=> {\r\n    console.log('**Search** Component rerendered')\r\n  });\r\n\r\n  return (\r\n    <div style={{ display: 'flex',flexDirection:'column', justifyContent: 'center', alignItems: 'center' }}>\r\n      <p>searched for: {search.value}</p>\r\n      <Autocomplete\r\n        onKeyUp={(event)=>{\r\n          // make ajax to get the country matches the value from this input\r\n          let {value: v} = event.target;\r\n          v = v.replace(/\\s+$/, '');\r\n          if( v.length>=2 ){\r\n            dispatch(autoCompleteAsync(v))\r\n          }\r\n        }}//END onKeyPress\r\n        onChange={(event, values)=>{\r\n          // user chose the city make ajax req to get the city weather\r\n          dispatch(fetchCountryAsync(values));\r\n        }}\r\n        id=\"combo-box-demo\"\r\n        options={search.filteredCountries}\r\n        getOptionLabel={(option) => option.LocalizedName}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label=\"Search for country\" variant=\"outlined\" />}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './country.module.css';\r\nimport Lottie from 'react-lottie';\r\nimport cloudyData from '../../assets/lottie/cloudy.json';\r\nimport sunnyData from '../../assets/lottie/sunny.json';\r\nimport mistData from '../../assets/lottie/mist.json';\r\nimport showerData from '../../assets/lottie/shower.json';\r\nimport snow_sunnyData from '../../assets/lottie/snow_sunny.json';\r\nimport stormData from '../../assets/lottie/storm.json';\r\nimport thunderData from '../../assets/lottie/thunder.json';\r\nimport windyData from '../../assets/lottie/windy.json';\r\nimport snowData from '../../assets/lottie/snow.json';\r\n\r\n\r\n// selectors\r\nimport { selectCountryWeather } from '../country/countrySlice';\r\n\r\n// Material UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    flex: '1',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '&__date': {\r\n      color: 'red',\r\n    },\r\n    '&__icon': {\r\n      color: 'blue,'\r\n    },\r\n    '&__temprature': {\r\n      '&_min': {\r\n        color: 'gray',\r\n        '&::after': {\r\n          content: '\"\\\\2103\"',\r\n        }\r\n      },\r\n      '&_max': {\r\n        color: 'black',\r\n        paddingRight: '1rem',\r\n        '&::after': {\r\n          content: '\"\\\\2103\"',\r\n        }\r\n      }\r\n    }\r\n  },\r\n}));\r\n\r\nconst icons =  [\r\n  {key: \"1\", title: \"Sunny\", animation: sunnyData},\r\n  {key: \"2\", title: \"Mostly Sunny\", animation: sunnyData},\r\n  {key: \"3\", title: \"Partly Sunny\", animation: cloudyData},\r\n  {key: \"4\", title: \"Intermittent Clouds\", animation: cloudyData},\r\n  {key: \"5\", title: \"Hazy Sunshine\", animation: cloudyData},\r\n  {key: \"6\", title: \"Mostly Cloudy\", animation: cloudyData},\r\n  {key: \"7\", title: \"Cloudy\", animation: cloudyData},\r\n  {key: \"8\", title: \"Dreary (Overcast)\", animation: cloudyData},\r\n  {key: \"11\", title: \"Fog\", animation: windyData},\r\n  {key: \"12\", title: \"Showers\", animation: showerData},\r\n  {key: \"13\", title: \"Mostly Cloudy w/ Showers\", animation: windyData},\r\n  {key: \"14\", title: \"Partly Sunny w/ Showers\", animation: windyData},\r\n  {key: \"15\", title: \"T-Storms\", animation: stormData},\r\n  {key: \"16\", title: \"Mostly Cloudy w/ T-Storms\", animation: stormData},\r\n  {key: \"17\", title: \"Partly Sunny w/ T-Storms\", animation: stormData},\r\n  {key: \"18\", title: \"Rain\", animation: showerData},\r\n  {key: \"19\", title: \"Flurries\", animation: showerData},\r\n  {key: \"20\", title: \"Mostly Cloudy w/ Flurries\", animation: cloudyData},\r\n  {key: \"21\", title: \"Partly Sunny w/ Flurries\", animation: cloudyData},\r\n  {key: \"22\", title: \"Snow\", animation: snow_sunnyData},\r\n  {key: \"23\", title: \"Mostly Cloudy w/ Snow\", animation: snow_sunnyData},\r\n  {key: \"24\", title: \"Ice\", animation: snow_sunnyData},\r\n  {key: \"25\", title: \"Sleet\", animation: stormData},\r\n  {key: \"26\", title: \"Freezing Rain\", animation: stormData},\r\n  {key: \"29\", title: \"Rain and Snow\", animation: snowData},\r\n  {key: \"30\", title: \"Hot\", animation: sunnyData},\r\n  {key: \"31\", title: \"Cold\", animation: thunderData},\r\n  {key: \"32\", title: \"Windy\", animation: thunderData},\r\n  {key: \"33\", title: \"Clear\", animation: sunnyData},\r\n  {key: \"34\", title: \"Mostly Clear\", animation: sunnyData},\r\n  {key: \"35\", title: \"Partly Cloudy\", animation: cloudyData},\r\n  {key: \"36\", title: \"Intermittent Clouds\", animation: cloudyData},\r\n  {key: \"37\", title: \"Hazy Moonlight\", animation: cloudyData},\r\n  {key: \"38\", title: \"Mostly Cloudy\", animation: cloudyData},\r\n  {key: \"39\", title: \"Partly Cloudy w/ Showers\", animation: showerData},\r\n  {key: \"40\", title: \"Mostly Cloudy w/ Showers\", animation: showerData},\r\n  {key: \"41\", title: \"Partly Cloudy w/ T-Storms\", animation: thunderData},\r\n  {key: \"42\", title: \"Mostly Cloudy w/ T-Storms\", animation: thunderData},\r\n  {key: \"43\", title: \"Mostly Cloudy w/ Flurries\", animation: thunderData},\r\n  {key: \"44\", title: \"Mostly Cloudy w/ Snow\", animation: snow_sunnyData},\r\n];\r\n\r\n\r\nconst defaultOptions = (icon)=> {\r\n  return {\r\n    loop: true,\r\n    autoplay: true, \r\n    animationData: icons.find(i=> String(i.key)===String(icon)).animation,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  }\r\n};\r\n\r\nexport function Country() {\r\n  const countryWeather = useSelector(selectCountryWeather);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  React.useEffect( ()=> {\r\n    console.log('**Country** did mount', countryWeather)\r\n  }, [countryWeather]);\r\n  // Component rerendered or updated\r\n  React.useEffect( ()=> {\r\n    console.log('**Country** Component rerendered')\r\n  });\r\n\r\n  if (!countryWeather.fiveDay.length) {\r\n    return <h2>Country not selected</h2>\r\n  } else {\r\n    return (\r\n      <div >\r\n        <Grid className={classes.root} container spacing={1}>\r\n          {countryWeather.fiveDay.map( day => {\r\n            return <Paper className={classes.paper}>\r\n              <div className={`${classes.paper}__date`}>{day.Date}</div>\r\n              <div className={`${classes.paper}__icon`}>\r\n              <Lottie options={defaultOptions(day.Day.Icon)}\r\n                height={150}\r\n                width={150}\r\n              />\r\n              </div>\r\n              <div className={`${classes.paper}__temprature`}>\r\n                <span className={`${classes.paper}__temprature_max`}>{day.Temperature.Maximum.Value}</span>\r\n                <span className={`${classes.paper}__temprature_min`}>{day.Temperature.Minimum.Value}</span>\r\n              </div>\r\n            </Paper>\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport searchReducer from '../features/search/searchSlice';\r\nimport countryReducer from '../features/country/countrySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    search: searchReducer,\r\n    country: countryReducer\r\n  },\r\n});\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\n// CSS\r\nimport './App.css';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n// Components\r\nimport { Counter } from './features/counter/Counter';\r\nimport { Search } from './features/search/Search';\r\nimport { Country } from './features/country/Country';\r\n// Store\r\nimport store from './app/store';\r\nimport Lottie from 'react-lottie';\r\n// header lottie\r\nimport headerData from './assets/lottie/header.json';\r\nimport tree_in_wind_Data from './assets/lottie/tree_in_wind.json';\r\nimport suncloudData from './assets/lottie/suncloud.json';\r\n\r\nconst defaultOptions = (json) => {\r\n  return {\r\n    loop: true,\r\n    autoplay: true, \r\n    animationData: json,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  React.useEffect(()=> {\r\n    console.log('App mounted', store.getState())\r\n  } ,[])\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" style={{ backgroundColor: '#D1F5FF', position:'relative', minHeight: '80vh', height: '80vh' }}>\r\n        <div className=\"sun\" style={{ maxWidth: '30%', position: 'absolute', top: '0', left: '0' }}>\r\n          <Lottie \r\n            options={defaultOptions(suncloudData)}\r\n          />\r\n        </div>\r\n        <h1>Weather App</h1>\r\n        <div className=\"tree\" style={{ maxWidth: '30%', position: 'absolute', right: '10%', bottom: '0', zIndex: '1' }}>\r\n          <Lottie \r\n            options={defaultOptions(tree_in_wind_Data)}\r\n          />\r\n        </div>\r\n        <div class=\"grass\" style={{width:'100vw',position:'absolute',bottom:'0',padding:'3rem',backgroundColor:'green'}}></div>\r\n      </header>\r\n      <main>\r\n        <Search />\r\n        <Country />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1diJ4\",\"value\":\"Counter_value__LK--c\",\"button\":\"Counter_button__Uzfrr\",\"textbox\":\"Counter_textbox__2egyu\",\"asyncButton\":\"Counter_asyncButton__Yk2WO Counter_button__Uzfrr\"};"],"sourceRoot":""}